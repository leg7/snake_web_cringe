/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'war'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'com.google.code.gson:gson:2.12.1'

    implementation 'jakarta.platform:jakarta.jakartaee-api:11.0.0-RC1'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.2'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.1.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'

    implementation 'org.xerial:sqlite-jdbc:3.49.1.0'

    implementation 'org.apache.tomcat.embed:tomcat-embed-core:11.0.5'
	  implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:11.0.5'
    implementation 'org.apache.tomcat.embed:tomcat-embed-websocket:11.0.5'
    implementation 'org.apache.tomcat.embed:tomcat-embed-el:11.0.5'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'Matou'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.register("deploy") {
    dependsOn tasks.war

    def tomcatWebAppsDir = System.env.TOMCAT_WEBAPP_DIR

    doLast {
        delete(fileTree(tomcatWebAppsDir).matching {
            include "${project.name}*"
        })
        copy {
            from tasks.war.archiveFile
            into tomcatWebAppsDir
        }
    }
}
